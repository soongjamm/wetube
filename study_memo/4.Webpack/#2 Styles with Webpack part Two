entry output은 지정해주었다
module부분이 의미하는건 module을 발견할때 마다 다음과 같은 rules를 따르라고 함

지금 코드에서는 scss로 끝나는 어떤 모듈(styles.scss)을 만나면 이 plugin을 사용하도록 하고있음
그리고 이 plugin은 내부에서 또 plugin을 사용하고 있다.
왜냐면 scss파일을 일반적인 css로 통역해야 해서.

이걸 윟 ㅐ먼저 sass-loader를 이용.
sass-loader는 sass 혹은 scss를 받아서 일반 css로 바꿔줄 수 있다.
그다음 postcss-loader. CSS를 받아서 우리가 얘한테 주는 plugin을 가지고 css를 변환
예를 들어. css를 쓰는데 인터넷 익스플로러랑 호환되게 하자. prefix부터 잡다한거 까지 전부 처리
css-loader를 쓰면 webpack이 css를 이해하게 된다.

잘 호환되는 순수한 css가 불러와지면, 그부분만 텍스트를 추출해서 어딘가로 보낼거다.

직전에 해결하지 못한걸 해결하자.
css-loader, postcss-loader, sass-loader를 설치하자.

#postcss
style lint도 있고 많은 플러그인이 있다.
autoprefixer도 있는데 이걸 써보자.
config파일속 postcss 안에 option이 리턴하는 것은 plugin들로 구성된 array
그 안에 또 옵션을 넣는다.(autoprefixer())

수많은 옵션이 있지만 우리는 cover 99.5% 쓸것.

여전히 에러 뜸..
extract-text-webpack-plugin에 상응하는 플러그인이 없다-> 플러그인을 생성
또에러 -> node-sass모듈을 못찾음-> 설치안해서 -> 설치하자


---
sass파일을 loader에서 취해서 css로 만들고
그부분을 따로 추출해서 styles.css로 만들어줄수 있었고
그파일은 output디렉토리 static에 만들어짐.

postcss-loader는 특정 plugins 들을 css에 대해 실행시켜주고
css-loader는 css를 가져와주고
ExtractCSS 그 부분만 추출해주는것