우선 search만들어 주는데 home과 거의 비슷함

다음에 join화면 바꾸기. 누군가 회원가입을 하면 자동으로 Login을 하고나서
home으로 이동할 것.

현재 join화면에서 다 입력하고 join 누르면 
Cannot POST /join 에러.
왜냐면 /join 경로로 post하기 위한 설정이나 코드가 없다.
join 이름 정확하게 -> getJoin으로 변경
postJoin 함수도 새로 추가한다. 그리고 서로 다른 method를 적용할 것.

globalRouter에서 join->getJoin, post도 추가.
라우트들을 조금씩 분리할수도 있음. 컨트롤러나 페이지도 분리할수 있음.

req.body 출력 찍으면 회원가입시에 입력한 정보들이 찍힌다.

여기서 잠깐. app.js에서 bodyParser를 삭제하면 어떻게 될까?
콘솔 확인시, body가 없다고 뜰것. ==> 사용자가 전송한 정보를 알수 없음.

req.body정보를 가져와야함. ECMAScript6를 이용하자.
req안에 있는 body에서 name, email, password, password2를 가져오자.

!------------------
const {
        body: {name, email, password, password2}
    } = req;
랑
const {
        name, email, password, password2
    } = req.body;
같다.
-------------------!

암호1,2를 비교해서 다르다면 상태코드(status code)를 보낼것.
=> 인터넷이 어떻게 상호작용하는지 표시하는것
res에 상태코드를 전달할거다. password가 서로 다를때, 400으로 상태코드 전달
400은 잘못된요청. 서버가 잘못된 요청이라는 상태코드를 전달했기때문에 비번저장 안물어봄
마지막에 res.render를 한다면 이 잘못된 요청이라는 상태코드로 화면표시가능

에러얘기는 나중에. 페이지에 에러를 전달하는건 좋은것

비밀번호 일치하면 home으로 redirect, 주석 달아주자.